{"content":"<p>Phuongne, Th10 22, 2020</p><hr /><p><strong>Attribute</strong> trong Unity là tính năng được sử dụng rất nhiều trong scripts, hầu như class nào mình cũng xài tới nó. Đồng thời phần cuối series mình cũng sẽ nói cách tạo một <strong>custom attribute</strong>.</p><h2 id=\"1serializefieldattributechnhsaccbinprivatetrninspector\">1. SerializeField attribute, chỉnh sửa các biến private trên inspector</h2><p>Trong lập trình OOP, chúng ta đã biết về <strong>tính đóng gói</strong>, cơ bản như sau “Một class chỉ nên “trưng” ra các biến, các hàm nào bên ngoài cần sử dụng như là API, còn lại các hàm và biến (state) xử lý nội bộ trong class chúng ta đều đặt <strong>private</strong>.”</p><p>Tuy nhiên các biến private thì không được Unity serialize lên inspector để cho chúng ta hoặc các game designer chỉnh sửa và cân bằng game, đó là lý do chúng ta cần SerializeField:</p><pre><code class=\"cs language-cs\">Vector3 targetPosition;<br/>[SerializeField] float moveDuration = 0.1f;<br/></code></pre><p>Một số lưu ý về khả năng [SerializeField] của Unity:</p><ul><li>Không thể serialize biến <strong>static</strong></li><li>Không thể serialize các field (<strong>get set</strong> của biến)</li><li>Không serialize được kiểu <strong>Dictionary</strong></li><li>Chỉ có thể serialize các kiểu dữ liệu được đánh dấu [<strong>Serializable</strong>] (đọc phần dưới)</li></ul><h2 id=\"2systemserializableattributevsaofieldkhnghinlninspector\">2. System.Serializable attribute, vì sao field không hiện lên inspector?</h2><p>Ở attribute này mình sẽ không nói quá sâu bởi thuộc về package System của C#, tuy nhiên nó liên quan tới cách mà Unity serialize lên inspector nên mình đề cập vào.</p><pre><code class=\"cs language-cs\">public class Person {<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public string fullname;<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[SerializeField] string firstName;<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private string lastName;<br/>}<br/></code></pre><p>Ở trên mình có 1 class Person non-MonoBehaviour đơn giản gồm 3 biến: <strong>public</strong> fullname, <strong>[SerializeField]</strong> firstName và <strong>private</strong> lastName.</p><pre><code class=\"cs language-cs\">public class School : MonoBehaviour<br/>{<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Person principal;<br/>}<br/></code></pre><p>Các bạn cũng có thể đoán được là nó không xuất hiện trên <strong>Inspector</strong> như tiêu đề.</p><p><img src=\"https://images.viblo.asia/4e74696b-2f26-4afe-bd9c-8c3c4ff1d73f.png\" alt=\"image.png\" />&lt;div align=\"center\"&gt;School Component&lt;/div&gt;</p><pre><code class=\"cs language-cs\">[System.Serializable]<br/>public class Person {<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public string fullname;<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[SerializeField] string firstName;<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private string lastName;<br/>}<br/></code></pre><p>Sau khi mình thêm [System.Serializable] hoặc [Serializable] nếu các bạn using System;, thì Unity đã có thể hiểu để serialize.</p><p><img src=\"https://images.viblo.asia/1640d91f-5b29-4d43-9c99-c41fbb02d0ad.png\" alt=\"image.png\" />&lt;div align=\"center\"&gt;School Component sau khi sử dụng Serializable cho Person&lt;/div&gt;</p><p>Ngoài ra để đảm bảo một thực thể (instance) của <strong>custom class</strong> có thể xuất hiện trên <strong>Inspector</strong>, thì class đó cần phải tuân theo các quy định về serialization:</p><ol><li>Có attribute <strong>[Serializable]</strong></li><li>Không phải <strong>static</strong></li><li>Không được là <strong>abstract</strong></li><li>Không phải <strong>generic</strong></li></ol><p>Để hiểu rõ hơn về serialization là gì và làm gì thì các bạn có thể click vào link ở mục 3 (mục dưới)</p><h2 id=\"3hideininspectorattributegiubinpublictrninspector\">3. HideInInspector attribute, giấu biến public trên inspector</h2><p>Cái này trái ngược với [SerializeField], attribute này có khả năng <strong>ẩn</strong> các biến public <strong>VÀ</strong> các biến được đánh dấu [SerializeField] trên inspector, tức là độ ưu tiên cao hơn [SerializeField]</p><pre><code class=\"cs language-cs\">public class School : MonoBehaviour<br/>{<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[HideInInspector] public Person principal;<br/>}<br/></code></pre><p>Tuy nhiên thuộc tính này không làm mất khả năng serialization của biến.</p><p>“Khả năng <strong>serialization</strong> của biến là gì?”</p><p>Tham khảo bài viết: <a href=\"https://viblo.asia/p/script-serialization-trong-unity3d-la-gi-GyZJZXBkVjm\">Script Serialization trong Unity3D</a></p><h2 id=\"4sdngattributesheaderspacerangetextareaviinspector\">4. Sử dụng attributes Header, Space, Range, TextArea… với inspector</h2><p>Các attributes ở dưới giúp chúng ta tổ chức lại các biến xuất hiện trên inspector một cách có tổ chức, tăng khả năng đọc hiểu (readability).</p><h3 id=\"headerattributetotiuchoccbin\">Header attribute: Tạo tiêu đề cho các biến</h3><pre><code class=\"cs language-cs\">public class School : MonoBehaviour<br/>{<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[Header(\"Reference to Manager\")]<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Person principal;<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Person directorate;<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[Header(\"Reference to Teaching fields\")]<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Person[] teachers;<br/>&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Person[] students;<br/>}<br/></code></pre><p><img src=\"https://images.viblo.asia/34c3c1d5-7307-4d5c-986b-f66dd08ae60b.png\" alt=\"image.png\" />&lt;div align=\"center\"&gt;Sử dụng attribute [Header]&lt;/div&gt;</p><h3 id=\"spacetokhongtrngtrninspector\">Space: tạo khoảng trống trên inspector</h3><pre><code class=\"cs language-cs\">[Header(\"Reference to Manager\")]<br/>public Person principal;<br/>public Person directorate;<br/>[Header(\"Reference to Teaching fields\")]<br/>[Space(100)]<br/>public Person[] teachers;<br/>public Person[] students;<br/></code></pre><p><img src=\"https://images.viblo.asia/fd0a2a0e-af19-4bb5-a6a0-745de14b2c3f.png\" alt=\"image.png\" />&lt;div align=\"center\"&gt;Sử dụng Space attribute&lt;/div&gt;</p><h3 id=\"rangetosliderchogitrcabinphhpviccbincgitrthucminmax\">Range: tạo slider cho giá trị của biến, phủ hợp với các biến có giá trị thuộc [min, max]</h3><pre><code class=\"cs language-cs\">[Header(\"Reference to Teaching fields\")]<br/>public Person[] teachers;<br/>public Person[] students;<br/>[Space(30)]<br/>[Range(1, 100)]<br/>public int staff;<br/></code></pre><p><img src=\"https://images.viblo.asia/451452d1-6c3d-44b7-b9b1-077a4c36b919.png\" alt=\"image.png\" />&lt;div align=\"center\"&gt;Tạo thanh slider cho staff giá trị từ 1 – 100&lt;/div&gt;</p><h3 id=\"textareatomtcontainerchostringcchiucaolinhhotvkhnngcunscrollable\">TextArea: tạo một container cho string, có chiều cao linh hoạt và khả năng cuộn (scrollable)</h3><pre><code class=\"cs language-cs\">[Range(1, 100)]<br/>public int staff;<br/>[TextArea]<br/>public string description;<br/></code></pre><p><img src=\"https://images.viblo.asia/39ffbbe4-7c4b-4463-b981-250460017f3e.png\" alt=\"image.png\" />&lt;div align=\"center\"&gt;TextArea cho biến string Description&lt;/div&gt;</p><h3 id=\"tooltipcungcpmtchobintrninspector\">Tooltip: cung cấp mô tả cho biến trên inspector</h3><pre><code class=\"cs language-cs\">[TextArea]<br/>[Tooltip(\"This is description for this school\")]<br/>public string description;<br/></code></pre><p>Khi đưa chuột hover (trỏ) vào biến Description này trên inspector, xuất hiện tooltip:</p><p><img src=\"https://images.viblo.asia/87b6ca5d-16ca-4b58-afa3-c461fe57af7a.png\" alt=\"image.png\" />&lt;div align=\"center\"&gt;Tooltip cho biến description&lt;/div&gt;</p><h2 id=\"claims\">Claims</h2><p>Bài viết được đăng vào 2020, chỉ có giá trị tham khảo các bạn nhé ;)</p><h2 id=\"ngunthamkho\">Nguồn tham khảo</h2><p><a href=\"https://docs.unity3d.com/Manual/Attributes.html\">Unity Document – Attributes</a></p><p><a href=\"https://unity3d.college/2017/05/22/unity-attributes/\">Improving the Unity Editor Inspector with Unity Attributes</a></p>","title":"SerializeField, Header và một số attributes trong Unity3D","tags":["Unity3d"],"created_at":1690681608000,"updated_at":1692542345000,"comments":[]}